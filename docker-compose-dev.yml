version: "3.8"

services:
  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    init: true
    container_name: fastapi
    ports:
      - 5678:5678
      - 8004:8004
    env_file:
      - .env.dev
    volumes:
      - ./backend:/app
    command:
      [
        "sh",
        "-c",
        "pip install debugpy && python -m debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8004"
      ]
    depends_on:
      - database

  redis:
    image: redis:7.4.0-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - redis-data:/data

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery-worker
    env_file:
      - .env.dev
    command: celery -A app.services.v2.celery_utils.celery_app worker --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      - CELERY_BROKER_URL=redis://:eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@redis:6379/0
    depends_on:
      - fastapi
      - redis

  flower-dashboard:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flower-dashboard
    env_file:
      - .env.dev
    command: celery --broker=redis://:eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@redis:6379/0 flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis://:eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@redis:6379/0
    depends_on:
      - fastapi
      - redis
      - celery-worker

  database:
    build:
      context: ./backend/db
      dockerfile: Dockerfile.dev
    container_name: database
    init: true
    expose:
      - 5432 
    env_file:
      - .env.dev
    volumes:
      - db-data:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env.dev
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  nuxt-ui:
    build:
      context: ./nuxtui
      dockerfile: Dockerfile.dev
    container_name: nuxt-ui
    ports:
      - "3000:3000"
    env_file:
      - .env.dev
    command: ["npm", "run", "dev"]


volumes:
  db-data: null
  pgadmin-data: null
  redis-data: null
