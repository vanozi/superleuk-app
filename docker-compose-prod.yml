version: "3.8"

services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=noreply@gebroedersvroege.nl"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: "frontend"
    environment:
      - BASE_URL_API=${BASE_URL_API}
    depends_on:
      - fastapi
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`superleuk.gebroedersvroege.nl`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"

  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: "fastapi"
    environment:
      - ENVIRONMENT=prod
      - TESTING=0
      - DATABASE_URL=${DATABASE_URL}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - MAIL_TLS=${MAIL_TLS}
      - MAIL_SSL=${MAIL_SSL}
      - BASE_URL_API=${BASE_URL_API}
      - BASE_URL_FRONTEND=${BASE_URL_FRONTEND}
    # command: bash -c "while true; do sleep 1; done"  # Infinite loop to keep container live doing nothing
    depends_on:
      - database
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port 8004
    expose:
      - 8004
    volumes:
      - ./backend:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`superleuk.gebroedersvroege.nl`) && PathPrefix(`/api`)"
      - "traefik.http.routers.fastapi.entrypoints=websecure"
      - "traefik.http.routers.fastapi.tls.certresolver=myresolver"

  database:
    build:
      context: ./backend/db
      dockerfile: Dockerfile.prod
    container_name: "database"
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.gebroedersvroege.nl`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls.certresolver=myresolver"



volumes:
  db-data:
  pgadmin-data:
