version: "3.8"

services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik-test"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: "fastapi-test"
    environment:
      - ENVIRONMENT=test
      - TESTING=1
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_URL_TEST_BACKEND=${DATABASE_URL_TEST_BACKEND}
      - DATABASE_URL_TEST_FRONTEND=${DATABASE_URL_TEST_FRONTEND}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - MAIL_TLS=${MAIL_TLS}
      - MAIL_SSL=${MAIL_SSL}
      - BASE_URL_API=${BASE_URL_API}
      - BASE_URL_FRONTEND=${BASE_URL_FRONTEND}
    # command: bash -c "while true; do sleep 1; done"  # Infinite loop to keep container live doing nothing
    depends_on:
      - database
    volumes:
      - ./backend:/app
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port 8004
    expose:
      - 8004
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`api.localhost`) &&
        PathPrefix(`/api`)"
      - "traefik.http.routers.fastapi.entrypoints=web"

  quasar:
    container_name: "quasar-test"
    build:
      context: ./quasar-superleuk
      dockerfile: Dockerfile.test
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.quasar.rule=Host(`quasar.localhost`)"
      - "traefik.http.routers.quasar.entrypoints=web"

  database:
    build:
      context: ./backend/db
      dockerfile: Dockerfile.test
    container_name: "database-test"
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
