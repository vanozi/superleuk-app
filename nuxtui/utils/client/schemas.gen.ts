// This file is auto-generated by @hey-api/openapi-ts

export const $AddRoleToUserRequest = {
    properties: {
        user_id: {
            type: 'integer',
            title: 'User Id'
        },
        role_id: {
            type: 'integer',
            title: 'Role Id'
        }
    },
    type: 'object',
    required: ['user_id', 'role_id'],
    title: 'AddRoleToUserRequest'
} as const

export const $AddressResponse = {
    properties: {
        street: {
            type: 'string',
            title: 'Street'
        },
        number: {
            type: 'string',
            title: 'Number'
        },
        postal_code: {
            type: 'string',
            title: 'Postal Code'
        },
        city: {
            type: 'string',
            title: 'City'
        },
        country: {
            type: 'string',
            title: 'Country'
        }
    },
    type: 'object',
    title: 'AddressResponse'
} as const

export const $AllowedUserRequest = {
    properties: {
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        }
    },
    type: 'object',
    required: ['email'],
    title: 'AllowedUserRequest'
} as const

export const $AllowedUserResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        created_at: {
            type: 'string',
            format: 'date-time',
            title: 'Created At'
        },
        last_modified_at: {
            type: 'string',
            format: 'date-time',
            title: 'Last Modified At'
        },
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        }
    },
    type: 'object',
    required: ['id', 'created_at', 'last_modified_at', 'email'],
    title: 'AllowedUserResponse'
} as const

export const $Body_auth_login = {
    properties: {
        grant_type: {
            anyOf: [
                {
                    type: 'string',
                    pattern: 'password'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Grant Type'
        },
        username: {
            type: 'string',
            title: 'Username'
        },
        password: {
            type: 'string',
            title: 'Password'
        },
        scope: {
            type: 'string',
            title: 'Scope',
            default: ''
        },
        client_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Id'
        },
        client_secret: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Secret'
        }
    },
    type: 'object',
    required: ['username', 'password'],
    title: 'Body_auth-login'
} as const

export const $CreateRoleRequest = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        description: {
            type: 'string',
            title: 'Description'
        }
    },
    type: 'object',
    required: ['name', 'description'],
    title: 'CreateRoleRequest'
} as const

export const $HTTPError = {
    properties: {
        detail: {
            type: 'string',
            title: 'Detail'
        }
    },
    type: 'object',
    required: ['detail'],
    title: 'HTTPError',
    description: 'HTTP error schema to be used when an `HTTPException` is thrown.'
} as const

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                $ref: '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const

export const $KlauwScoreBase = {
    properties: {
        koenummer: {
            type: 'string',
            title: 'Koenummer'
        },
        behandeldatum: {
            type: 'string',
            format: 'date',
            title: 'Behandeldatum'
        },
        notatie: {
            type: 'string',
            title: 'Notatie'
        }
    },
    type: 'object',
    required: ['koenummer', 'behandeldatum', 'notatie'],
    title: 'KlauwScoreBase'
} as const

export const $RegisterUserRequest = {
    properties: {
        first_name: {
            type: 'string',
            title: 'First Name'
        },
        last_name: {
            type: 'string',
            title: 'Last Name'
        },
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        password: {
            type: 'string',
            format: 'password',
            title: 'Password',
            writeOnly: true
        }
    },
    type: 'object',
    required: ['first_name', 'last_name', 'email', 'password'],
    title: 'RegisterUserRequest'
} as const

export const $ReleaseRequest = {
    properties: {
        from_date: {
            type: 'string',
            format: 'date',
            title: 'From Date'
        },
        to_date: {
            type: 'string',
            format: 'date',
            title: 'To Date'
        },
        user_id: {
            type: 'integer',
            title: 'User Id'
        }
    },
    type: 'object',
    required: ['from_date', 'to_date', 'user_id'],
    title: 'ReleaseRequest'
} as const

export const $RemoveRoleFromUserRequest = {
    properties: {
        user_id: {
            type: 'integer',
            title: 'User Id'
        },
        role_id: {
            type: 'integer',
            title: 'Role Id'
        }
    },
    type: 'object',
    required: ['user_id', 'role_id'],
    title: 'RemoveRoleFromUserRequest'
} as const

export const $ResetPassword = {
    properties: {
        token: {
            type: 'string',
            title: 'Token'
        },
        password: {
            type: 'string',
            format: 'password',
            title: 'Password',
            writeOnly: true
        }
    },
    type: 'object',
    required: ['token', 'password'],
    title: 'ResetPassword'
} as const

export const $ResourceResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        groupId: {
            type: 'integer',
            title: 'Groupid'
        },
        title: {
            type: 'string',
            title: 'Title'
        }
    },
    type: 'object',
    required: ['id', 'groupId', 'title'],
    title: 'ResourceResponse'
} as const

export const $RoleInUserResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        description: {
            type: 'string',
            title: 'Description'
        }
    },
    type: 'object',
    required: ['id', 'name', 'description'],
    title: 'RoleInUserResponse'
} as const

export const $RoleResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        created_at: {
            type: 'string',
            format: 'date-time',
            title: 'Created At'
        },
        last_modified_at: {
            type: 'string',
            format: 'date-time',
            title: 'Last Modified At'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        description: {
            type: 'string',
            title: 'Description'
        }
    },
    type: 'object',
    required: ['id', 'created_at', 'last_modified_at', 'name', 'description'],
    title: 'RoleResponse'
} as const

export const $SuccessResponse = {
    properties: {
        detail: {
            type: 'string',
            title: 'Detail'
        },
        data: {
            anyOf: [
                {},
                {
                    type: 'null'
                }
            ],
            title: 'Data'
        }
    },
    type: 'object',
    required: ['detail'],
    title: 'SuccessResponse'
} as const

export const $TokenResponse = {
    properties: {
        access_token: {
            type: 'string',
            title: 'Access Token'
        },
        refresh_token: {
            type: 'string',
            title: 'Refresh Token'
        },
        token_type: {
            type: 'string',
            title: 'Token Type',
            default: 'bearer'
        }
    },
    type: 'object',
    required: ['access_token', 'refresh_token'],
    title: 'TokenResponse'
} as const

export const $TokenSchema = {
    properties: {
        token: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Token'
        },
        refresh_token: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Refresh Token'
        }
    },
    type: 'object',
    title: 'TokenSchema'
} as const

export const $UpdateAddressRequest = {
    properties: {
        street: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Street'
        },
        number: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Number'
        },
        postal_code: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Postal Code'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        }
    },
    type: 'object',
    title: 'UpdateAddressRequest'
} as const

export const $UpdateUserRequest = {
    properties: {
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        },
        email: {
            anyOf: [
                {
                    type: 'string',
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        },
        telephone_number: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Telephone Number'
        },
        date_of_birth: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Of Birth'
        }
    },
    type: 'object',
    required: ['first_name', 'last_name', 'email', 'telephone_number', 'date_of_birth'],
    title: 'UpdateUserRequest'
} as const

export const $VakantieCreateSchemaForUserAsAdmin = {
    properties: {
        start_date: {
            type: 'string',
            format: 'date',
            title: 'Start Date'
        },
        end_date: {
            type: 'string',
            format: 'date',
            title: 'End Date'
        },
        user_id: {
            type: 'integer',
            title: 'User Id'
        }
    },
    type: 'object',
    required: ['start_date', 'end_date', 'user_id'],
    title: 'VakantieCreateSchemaForUserAsAdmin'
} as const

export const $VakantieRequest = {
    properties: {
        start_date: {
            type: 'string',
            format: 'date',
            title: 'Start Date'
        },
        end_date: {
            type: 'string',
            format: 'date',
            title: 'End Date'
        }
    },
    type: 'object',
    required: ['start_date', 'end_date'],
    title: 'VakantieRequest'
} as const

export const $VakantieResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        start_date: {
            type: 'string',
            format: 'date',
            title: 'Start Date'
        },
        end_date: {
            type: 'string',
            format: 'date',
            title: 'End Date'
        }
    },
    type: 'object',
    required: ['id', 'start_date', 'end_date'],
    title: 'VakantieResponse'
} as const

export const $VakantiesForCalendarResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        start: {
            type: 'string',
            format: 'date',
            title: 'Start'
        },
        end: {
            type: 'string',
            format: 'date',
            title: 'End'
        },
        resourceId: {
            type: 'integer',
            title: 'Resourceid'
        }
    },
    type: 'object',
    required: ['id', 'start', 'end', 'resourceId'],
    title: 'VakantiesForCalendarResponse'
} as const

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const

export const $WeekTotals = {
    properties: {
        month: {
            type: 'string',
            title: 'Month'
        },
        hours: {
            type: 'number',
            title: 'Hours'
        },
        milkings: {
            type: 'integer',
            title: 'Milkings'
        }
    },
    type: 'object',
    required: ['month', 'hours', 'milkings'],
    title: 'WeekTotals'
} as const

export const $WorkingHoursRequest = {
    properties: {
        id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Id'
        },
        date: {
            type: 'string',
            format: 'date',
            title: 'Date'
        },
        hours: {
            type: 'number',
            title: 'Hours'
        },
        milkings: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Milkings',
            default: 0
        },
        description: {
            type: 'string',
            title: 'Description'
        },
        submitted: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Submitted',
            default: false
        }
    },
    type: 'object',
    required: ['date', 'hours', 'description'],
    title: 'WorkingHoursRequest'
} as const

export const $WorkingHoursResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        date: {
            type: 'string',
            format: 'date',
            title: 'Date'
        },
        hours: {
            type: 'number',
            title: 'Hours'
        },
        milkings: {
            type: 'integer',
            title: 'Milkings'
        },
        description: {
            type: 'string',
            title: 'Description'
        },
        submitted: {
            type: 'boolean',
            title: 'Submitted'
        }
    },
    type: 'object',
    required: ['id', 'date', 'hours', 'milkings', 'description', 'submitted'],
    title: 'WorkingHoursResponse'
} as const

export const $WorkingHoursWeekOverviewResponse = {
    properties: {
        year: {
            type: 'integer',
            title: 'Year'
        },
        week: {
            type: 'integer',
            title: 'Week'
        },
        week_start: {
            type: 'string',
            format: 'date',
            title: 'Week Start'
        },
        week_end: {
            type: 'string',
            format: 'date',
            title: 'Week End'
        },
        working_hours: {
            items: {
                $ref: '#/components/schemas/WorkingHoursResponse'
            },
            type: 'array',
            title: 'Working Hours'
        },
        sum_hours: {
            type: 'number',
            title: 'Sum Hours'
        },
        sum_milkings: {
            type: 'number',
            title: 'Sum Milkings'
        },
        submitted: {
            type: 'boolean',
            title: 'Submitted'
        }
    },
    type: 'object',
    required: ['year', 'week', 'week_start', 'week_end', 'working_hours', 'sum_hours', 'sum_milkings', 'submitted'],
    title: 'WorkingHoursWeekOverviewResponse'
} as const

export const $app__models__pydantic_models__auth__UserResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        created_at: {
            type: 'string',
            format: 'date-time',
            title: 'Created At'
        },
        last_modified_at: {
            type: 'string',
            format: 'date-time',
            title: 'Last Modified At'
        },
        first_name: {
            type: 'string',
            title: 'First Name'
        },
        last_name: {
            type: 'string',
            title: 'Last Name'
        },
        date_of_birth: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Of Birth'
        },
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        telephone_number: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Telephone Number'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active'
        },
        confirmation: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Confirmation'
        },
        roles: {
            anyOf: [
                {
                    items: {
                        $ref: '#/components/schemas/RoleResponse'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Roles'
        }
    },
    type: 'object',
    required: ['id', 'created_at', 'last_modified_at', 'first_name', 'last_name', 'date_of_birth', 'email', 'telephone_number', 'is_active', 'confirmation', 'roles'],
    title: 'UserResponse'
} as const

export const $app__models__pydantic_models__users__UserResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        },
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        telephone_number: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Telephone Number'
        },
        date_of_birth: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Of Birth'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active'
        },
        roles: {
            items: {
                $ref: '#/components/schemas/RoleInUserResponse'
            },
            type: 'array',
            title: 'Roles'
        },
        address: {
            anyOf: [
                {
                    $ref: '#/components/schemas/AddressResponse'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['id', 'first_name', 'last_name', 'email', 'telephone_number', 'date_of_birth', 'is_active', 'roles', 'address'],
    title: 'UserResponse'
} as const